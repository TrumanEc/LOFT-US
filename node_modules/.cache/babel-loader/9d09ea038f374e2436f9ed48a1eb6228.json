{"ast":null,"code":"import _toConsumableArray from\"/Users/darwinestebancifuentesgaray/Henry/FT-M2/09-React-Routing/homework/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/darwinestebancifuentesgaray/Henry/FT-M2/09-React-Routing/homework/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import'./App.css';import Nav from'../components/Nav.jsx';import Cards from'../components/Cards.jsx';import About from'../components/About';import Ciudad from'../components/Ciudad';import{Route,HashRouter as Router,Switch}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var apiKey='4ae2636d8dfbdc3044bede63951a019b';function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),cities=_useState2[0],setCities=_useState2[1];function onClose(id){setCities(function(oldCities){return oldCities.filter(function(c){return c.id!==id;});});}function onSearch(ciudad){//Llamado a la API del clima\nfetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(ciudad,\"&appid=\").concat(apiKey)).then(function(r){return r.json();}).then(function(recurso){if(recurso.main!==undefined){var _ciudad={min:Math.round(recurso.main.temp_min),max:Math.round(recurso.main.temp_max),img:recurso.weather[0].icon,id:recurso.id,wind:recurso.wind.speed,temp:recurso.main.temp,name:recurso.name,weather:recurso.weather[0].main,clouds:recurso.clouds.all,latitud:recurso.coord.lat,longitud:recurso.coord.lon};setCities(function(oldCities){return[].concat(_toConsumableArray(oldCities),[_ciudad]);});}else{alert(\"Ciudad no encontrada\");}});}function onFilter(ciudadId){var ciudad=cities.filter(function(c){return c.id===parseInt(ciudadId);});if(ciudad.length>0){return ciudad[0];}else{return null;}}return/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"App\"}),/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",render:function render(){return/*#__PURE__*/_jsx(Nav,{onSearch:onSearch});}}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",render:function render(){return/*#__PURE__*/_jsx(Cards,{cities:cities,onClose:onClose});}}),/*#__PURE__*/_jsx(Route,{path:\"/about\",component:About}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/ciudad/:ciudadId\",render:function render(_ref){var match=_ref.match;return/*#__PURE__*/_jsx(Ciudad,{city:onFilter(match.params.ciudadId)});}})]})]});}export default App;","map":{"version":3,"sources":["/Users/darwinestebancifuentesgaray/Henry/FT-M2/09-React-Routing/homework/src/containers/App.js"],"names":["React","useState","Nav","Cards","About","Ciudad","Route","HashRouter","Router","Switch","apiKey","App","cities","setCities","onClose","id","oldCities","filter","c","onSearch","ciudad","fetch","then","r","json","recurso","main","undefined","min","Math","round","temp_min","max","temp_max","img","weather","icon","wind","speed","temp","name","clouds","all","latitud","coord","lat","longitud","lon","alert","onFilter","ciudadId","parseInt","length","match","params"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport './App.css';\nimport Nav from '../components/Nav.jsx';\nimport Cards from '../components/Cards.jsx';\nimport About from '../components/About';\nimport Ciudad from '../components/Ciudad';\nimport {Route, HashRouter as Router,Switch} from 'react-router-dom'\n\nconst apiKey = '4ae2636d8dfbdc3044bede63951a019b';\n\nfunction App() {\n  const [cities, setCities] = useState([]);\n  function onClose(id) {\n    setCities(oldCities => oldCities.filter(c => c.id !== id));\n  }\n  function onSearch(ciudad) {\n    //Llamado a la API del clima\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}`)\n      .then(r => r.json())\n      .then((recurso) => {\n        if(recurso.main !== undefined){\n          const ciudad = {\n            min: Math.round(recurso.main.temp_min),\n            max: Math.round(recurso.main.temp_max),\n            img: recurso.weather[0].icon,\n            id: recurso.id,\n            wind: recurso.wind.speed,\n            temp: recurso.main.temp,\n            name: recurso.name,\n            weather: recurso.weather[0].main,\n            clouds: recurso.clouds.all,\n            latitud: recurso.coord.lat,\n            longitud: recurso.coord.lon\n          };\n          setCities(oldCities => [...oldCities, ciudad]);\n        } else {\n          alert(\"Ciudad no encontrada\");\n        }\n      });\n  }\n  function onFilter(ciudadId) {\n    let ciudad = cities.filter(c => c.id === parseInt(ciudadId));\n    if(ciudad.length > 0) {\n        return ciudad[0];\n    } else {\n        return null;\n    }\n  }\n  return (\n    <Router>\n    <div className=\"App\"></div>\n      <Switch>\n        <Route path='/' render={()=> <Nav onSearch={onSearch}/>}/>\n        <Route exact path='/' render={()=><Cards cities={cities} onClose={onClose}/> } />\n        <Route path='/about' component={About}/>\n        <Route exact path='/ciudad/:ciudadId' render={({match}) => <Ciudad city={onFilter(match.params.ciudadId)}/> } />\n      </Switch>\n    \n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}